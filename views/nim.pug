extends layout

block main
    div(class="main")
        h1 Spela Nim

        p
            | Här kommer vi framöver förhoppningsvis kunna spela Nim. Spelet
            | där man turas om att ta tändstickor ur högar. Den som tar sista
            | stickan förlorar.

        P
            | Implementationen görs enligt följande. Själva spelet Nim ligger
            | i en class Nim, där det finns variabler (ex antal högar, antal
            | stickor per hög, vems tur det är, osv) och funktioner (ex changePlayer,
            | removeMatches).

        P
            | För att spelet ska funka måste man dra igång spelservern. Den använder
            | sig av websockets för att koppla upp klienter (spelare). Min plan är
            | att den ska ha logiken att spelare ett som ansluter startar ett spel.
            | Spelare två ansluter till första spelet. Spelare tre startar ett nytt
            | spel, spelare fyra ansluter till spel två, osv. Alternativet som jag
            | funderade på var att lista alla spel som är igång, och att man kunde
            | välja vilket spel man ville ansluta till.

        P
            | Klienten i sin tur målar upp spelplanen, och när spelaren utför något
            | så skickas meddelanden till servern i applikationsformatet json.
            | Servern svarar därefter de båda spelarna. Själva realtiden ligger
            | i att när en spelare gjort sitt drag, så blir det direkt nästa spelares
            | tur.


        // - p
        // -     | Här spelar vi Nim. Starta ett spel eller gå med i ett spel.
        // -     | Ni måsta vara två spelare. Så här går det till.
        // - p
        // -     | När det är din tur tar du valfritt antal tändstickor ur EN hög.
        // -     | Klicka på "byt spelare", och
        // -     | därefter blir det nästa spelares tur. Den som tar sista stickan
        // -     | förlorar.

        P
            | Om spelservern är igång så kan du testa spelet. Om den inte är igång
            | så kan du starta den själv. Ladda ned koden från
            | <a href="https://github.com/mafd16/nim">Github</a>
            | och kör npm start. Sen kan du testköra spelet
            | <a href="/playnim">här</a>. Än så länge kan man bara starta spelet.

        h4 Databasintegration i Nim

        P
            | I databasen kommer resultaten av spelen att sparas. Jag kommer
            | åtminstone spara namnet på segraren, förloraren, vem man mött
            | och vem som gjort första draget. Data i databasen kan sen
            | troligen bli till ett statistikunderlag med en topplista,
            | historik spelare mot spelare och om det finns någon statistisk
            | fördel av att göra första draget.

        h4 Modul publicerad på npm, och använd i mitt nim-spel

        P
            | Jag har valt att publicera min class Nim som en modul på npm.
            | Där heter den nim-core.
            | Därefter installerar jag den i min app, och använder den i min
            | nim-server. Modulen hittar du på
            | <a href="https://www.npmjs.com/package/nim-core">npm</a> och på
            | <a href="https://github.com/mafd16/nim-core">GitHub</a>.






        br
        br
