extends layout

block main
    div(class="main")
        h1 Rapporter
        p Här hittar du rapporterna från de olika kursmomenten.

        h2 Kmom01

        h3 Berätta utförligt om din syn på Express och Pug och hur de samverkar. Relatera till andra ramverk du jobbat med. Lyft fram de fördelar och eventuellt nackdelar du finner, eller bara notera skillnader och likheter.

        p
            | Express känns som ett ganska litet ramverk, men med möjligheter att
            | lägga till funktionalitet allt eftersom. Pug (och express) är nytt för
            | mig, men det känns ändå lite bekant från webapp-kursen då vi jobbade med
            | liknande verktyg. Dessa samverkar lite på samma sätt som php-ramverket i
            | ramverk1-kursen, t.ex. med att kunna skicka in variabler in i vyerna. Det känns
            | användbart. Hur man skriver sin kod i pug tilltalar mig dock inte. Det är främst en
            | känsla jag har, och säkert beror det till stor del på att jag är helt ny på
            | syntaxen, och att jag inte vet ännu hur det mesta fungerar. Jag ser iaf fram emot
            | att lära mig. Sen så har jag funderat lite på vad som skiljer ett js ramverk mot
            | ett php ramverk. Jag kan inte se skillnader, fördelar, nackdelar själv, och det
            | var minsann inte lätt att söka sig till ett vettigt svar heller. Det beror
            | nog till stor del på vad det är för något man bygger, och vilka krav sitt
            | bygge har.

        h3 Använde du någon form av scaffolding som Express erbjuder?

        p
            | Javisst! Det kändes som vettigt att göra det. Jag använde mig av
            | express generator. Tycker det fungerade bra.

        h3 Berätta om din katalogstruktur och hur du organiserade din kod, hur tänkte du?

        p
            | Jag fick ju såklart grunden från scaffoldingen med express generator.
            | Mina routes samlade jag i index.js, och mina vyer i mappen views. Jag jobbade med
            | en layout-vy som mina andra vyer sen printas i, precis som i övningsartikeln.
            | Bilderna hamnade i public/images. Förmodligen så enkelt man kan få det.

        h3 Jobbar du med Markdown för innehållet, eller annat liknande?

        p
            | Nej, det gör jag inte. Det kanske skulle förenkla pug och dess syntax som
            | jag inte gillar. Men jag är ju tyvärr (vågar jag skriva detta?) inget
            | stort fan av Markdown heller. Men ofta så är det ju bra att tvinga sig själv
            | att göra saker man egentligen inte vill, eller kanske att tvinga sig utanför
            | komfort-zonen. Det är ju så man utvecklas. Tror nog jag kan komma att gilla
            | pug bättre än markdown. Vi får se!

        p
            | Kan även nämna att jag hade problem med att stoppa servern när man skulle
            | starta om den. Gick åt en del google-felsökning, där jag fann samma lösning
            | som det tipsades om i forumet. Att sen starta om i en .bat-fil var trevligt.
            | Även make test krånglade lite för mig, och <code>npm version 1.0.0</code>
            | fick jag inte att fungera alls. Jag får felsöka vidare på det.

        br



        h2 Kmom02

        h3 Har du jobbat med Docker eller andra virtualiseringstekniker innan?

        p
            | Just Docker är nytt för mig. Jag har jobbat med Oracle VM VirtualBox i
            | linux-kursen, men det är nog allt, i alla fall som jag kan minnas nu.
            | Eller ja, i ramverk1 använde vi ju oss av travis, scrutinizer osv.
            | De tjänsterna kan väl iofs räknas som virtualiseringstekniker. Dom
            | testar ju vår kod i en viss miljö, med de dependencies som vi anger.

        h3 Hur ser du på möjligheterna att använda dig av Docker för att jobba med tester av ditt repo?

        p
            | Det känns helt klart som en vettig möjlighet. Jag tänker mig rent allmänt
            | en situation där man har en app på en server med en version av t.ex. Node
            | som är utgående, och man vill uppdatera versionen på Node. Då testar man sin
            | app i Docker först för att se att allt fungerar. Eller som test innan man
            | uppdaterar sin app. Det finns säkert en massa fler möjligheter som jag inte
            | har koll på.

        h3 Gick allt smidigt eller stötte du på problem?

        p
            | Jodå, problem fick jag allt. Jag sitter på Windows 10 Home, så jag gjorde så
            | att jag installerade Docker Toolbox. För att få det att fungera så fick jag
            | gå in i BIOS (eller motsvarande) och aktivera virtualisering. Sen fick jag
            | problem med ip-nummer. Det gick ju inte alls att köra på localhost, utan jag
            | fick titta i programmet Kitematic som följde med Toolbox. Ip-adressen hittade
            | jag senare även när jag startade Toolbox. Så långt allt bra. Nästa problem
            | var att Docker inte kom åt mitt filsystem utanför C:\Users\MinUser. Docker
            | accepterar heller inte administratörsrättigheter utan lösenord (jag kör utan
            | lösenord på datorn) så jag trixade med att skapa en ny admin-användare på datorn,
            | för att kunna ge Docker tillgång till C:.
            | Det gick dock inte. Så jag hade en fungerande Docker, men som bara gick att köra på
            | kod under min användare. I ren frustration bestämde jag mig för att börja om och
            | uppgradera Windows till Education, och ominstallera Docker. Därefter krånglade det inget alls!

        h3 Skapade du din egen image, berätta om den?

        p
            | Nej. Jag hoppar över det. Jag tycker jag har lagt tillräckligt med tid
            | på detta kursmomentet, med allt krångel ovan. Däremot så la jag me-sidan på
            | ett gratis webbhotell som det tipsades om i chatten. Det gick ganska så enkelt.
            | Fick bara trixa lite med en PORT-variabel.

        br


        h2 Kmom03

        p
            | Detta kursmomentet var egentligen inte så krångligt, men jag blev ganska
            | vilseledd i början, och förstod inte helt och hållet vad som skulle göras.
            | <a href="https://dbwebb.se/forum/viewtopic.php?f=60&t=7005">Förtydligandet i forumet</a>
            | var lite samma som jag funderade på, men jag hade ännu inte kommit till
            | att formulera rätt fråga. Hur som så tänker jag mig att min applikation
            | framöver kommer vara spelet Nim. Det går ut på att man är (minst) två
            | spelare som turas om att ta tändstickor ur högar. Den som tar sista stickan
            | förlorar.

        h3 Berätta vilka tekniker/verktyg du valde för enhetstester och kodtäckning och varför?

        p
            | Jag valde Mocha och nyc/Istanbul. Mina kunskaper om vad som är bra, mindre bra
            | eller inte så bra är inte tillräckligt bra känner jag. Därför kör jag på
            | ett något säkrare kort, vilket lärarteamets rekommendationer borde vara.

        h3 Berätta om din CI-kedja och reflektera över de valen du gjorde?

        p
            | Först tog jag Travis som byggtjänst. Jag tycker den har fungerat bra
            | tidigare. Som kodanalys testade jag bettercodehub, och som kodtäckning
            | blev det codecov. Hade lite problem i början innan jag hade skrivit min
            | nim-kod och tester till den. Jag skrev visserligen några test-tester, men
            | först med riktiga tester ser man ju att det händer saker med kodtäckningen.
            | Sen la jag även till codeclimate och scrutinizer. Scrutinizer känns nästan
            | mest värt att ha med, då den ger tre tjänster på en gång. Visserligen
            | är tjänsterna lite olika i hur dom presenterar koden och de förbättringar
            | man kan göra. Tror jag skulle behöva använda dessa tjänster ganska mycket
            | mer, och med en stor mängd kod, för att hitta favoriter.

        h3 Hur väl lyckades du utvärdera TDD-konceptet och vilka är dina reflektioner?

        p
            | Jag lyckades inte alls anamma TDD-konceptet när jag byggde min kod för nim.
            | Jag hade det i bakhuvudet, och tänkte att jag kanske borde ha gjort tester
            | först, men samtidigt hade jag inte en klar bild av vad som skulle bli av
            | min kod. Jag hade inte ritningen klar för mig. Jag tänker att det är det
            | som är min främsta reflektion. Om man ska jobba enligt TDD så måste man veta
            | vad och hur man ska bygga. Att ha den stora bilden klar för sig helt enkelt.
            | Först då kan man skriva sina tester, och sen ge sig på att skriva koden.
            | Sen så är det säkert en vanesak också. Tränar man på att skriva testerna
            | först så kommer man ju bli bra på det. Jag tycker i alla fall att det verkar
            | vara en vettig metod.

        h3 Berätta om tankarna kring din klient/server applikation och nämn de tekniker du använder.

        p
            | Jag tänker mig att jag ska göra spelet Nim. Två spelare turas om att ta
            | tändstickor ur högar. Den som tar sista stickan förlorar. Då jag är
            | helt grön på det här med websockets och känner mig mycket mer hemma i php-ramverk
            | än i js-ramverk, så vet jag ännu inte vad det blir av det. Jag har i alla fall
            | en tanke om att man ska kunna starta ett nytt spel, eller kunna joina ett
            | befintligt spel med en spelare i. Spel med fler än två spelare skulle också
            | kunna vara en möjlighet. Befintliga spel visas i en lista. När det kommer till
            | tekniker så hoppas jag att det kommer vara möjligt med websockets och javascript.
            | Jag hoppas kunna hålla det ganska så enkelt, åtminstone till en början. Jag har
            | skapat en sida för spelet på me-sidan, men där finns ännu bara lite text.

        br


        h2 Kmom04

        p
            | Detta kursmoment blev det lite knep och knåp med. Jag inser att det
            | kanske inte är optimalt med att vara ute i god tid, fast det finns ju
            | fördelar med det också. Eftersom man i tidigare kmom har kunnat skjuta
            | på saker (exempelvis att bygga en server/klient) så blev jag tvungen att
            | gå tillbaka och kolla på tidigare kmoms krav. Detta också då kmom03
            | uppdaterades efter att jag hade lämnat in kmom03. Tror iaf att jag har
            | fått till det okej nu.



        h3 Är du ny på realtidsprogrammering eller har du gjort liknande tidigare?

        p
            | Jag är helt ny på det här. Det var kul att testa på, och man vill knappt
            | sluta. Dock så var det lite svårt att greppa vissa koncept, och jag hade
            | lite svårt att tyda viss dokumentation. Kanske beror det på att det är
            | just nytt, det brukar vara en ovanesak.

        h3 Hur gick det att jobba med konceptet realtidsprogrammering i webben, några reflektioner?

        p
            | Över lag så gick det bra. Jag utgick från de exempel vi fick med oss.
            | Det som var riktigt klurigt var att göra enhetstester på server och
            | klient. Jag fick starta upp servern i en kommandotolk, och köra testerna
            | i en annan. Då fungerade det. Men så lyckades jag inte göra i min CI-kedja,
            | och då försökte jag en hel del, med t.ex. npm pretest, hooks och en del annat.
            | Nu valde jag att kommentera bort de tester som var gjorda mot server/klient
            | och bara behålla de som är mot min Nim-klass.

        h3 Berätta om din chatt som du integrerade i redovisa-sidan.

        p
            | Som jag skrev ovan så utgick jag från exemplet och byggde därifrån.
            | Jag la all min kod till chatten i src/chatt, och integrerade sen i redovisa-sidan
            | genom att flytta clientfilerna så dom fungerade där. Jag använder mig
            | av json för att skicka data till och från servern, och i json anger jag
            | timestamp, data (själva meddelandet), type och nickname. Från klienten
            | skickas två olika sorters meddelanden (type), nämligen info- och message-meddelanden.
            | I klienten finns även tre olika utskriftsfunktioner. En tar emot info-meddelanden
            | och printar dom som ren text i browsern. Meddelanden från servern av type
            | message printas med en div, till höger i chatten, och med grön färg.
            | Meddelanden som kommer från den egna klienten printas med en div, till
            | vänster i chatten och med blå färg. Alla meddelanden innehåller tid och
            | nickname.

        P
            | Jag började titta på extrauppgifterna, då jag tänkte att jag skulle
            | ha nytta av dom i mitt nim-spel. För att serverna ska upptäcka klienter
            | som försvinner så utnyttjade jag funktionaliteten som följde med
            | ws-paketet. Där skickas en ping/pong var 30-nde sekund, och en funktion
            | heartbeat utnyttjas. Fås inte något svar så stängs anslutningen. Jag tror
            | mig ha sett att det funkar, men det var svårt att testa då servern oftast
            | märker när klienten försvinner. Jag försökte även lista inloggade användare,
            | men där gick jag tyvärr bet. Jag fick det inte att fungera. Jag tror dock att
            | jag kommer behöva någon slags listning av användare i mitt spel, så jag
            | får testa vidare på det.

        h3 Berätta om den realtidsfunktionalitet du väljer att integrera i din klient/server applikation.

        p
            | Först så flyttade jag min applikation till me/app, skapade ett repo på
            | github och la till en CI-kedja, enligt vad som krävdes i kmom03. Jag la
            | även till det som krävs för att kunna köra i Docker.
            | I min applikation så får man som spelare först ange ett nickname, och
            | starta/joina ett spel. Är man först (spelare 2n+1) så startar man ett spel,
            | och är man tvåa (spelare 2n+2) så joinar man ett spel. Spelare 1 får upp
            | spelplanen och en text: "Väntar på spelare två". När spelare två joinar
            | så startar spelet, och spelare ett får börja ta stickor. Det är så långt jag
            | har kommit i implementationen.

        P
            | Tanken är sen att spelarna turas om att ta stickor tills någon vinner.
            | Så fort någon tar stickor så blir det nästa spelares tur, och det är däri
            | som realtidsfunktionaliteten ligger. Förhoppningsvis kan jag lägga till
            | lite animering senare, så att det blir tydligt när turen går över. Just
            | nu så visas bara ett info-meddelande.


        br


        h2 Kmom05


        h3 Hur gick det att komma igång med databasen MongoDB?

        p
            | Det gick lite upp och ner. Först hade jag problem med att mappa
            | filsystemet på datorn mot Docker. Läste att det inte gick med
            | just Mongodb och windows, och tänkte att jag bara sparar databasen
            | i minnet. Men nu verkar det som att jag kanske lyckats på något sätt iaf.
            | Min data verkar vara kvar efter omstart av dator, docker mm.
            | När jag sen började skapa min crud-sida på redovisnings-sidan,
            | så ville jag ju bygga enligt MVC som vi lärt oss. Men jag fick
            | verkligen inte till det, och visste inte hur jag skulle gå till
            | väga. Kanske är jag inte lika bekväm med javascript/node och express,
            | som jag känner mig med php. Det blev iaf en lösning som funkar,
            | men som kanske inte är den snyggaste. Jag gör mina databas-kopplingar
            | och -operationer i controllern/routerna. Det funkar bra, men just
            | nu så är det en del kod som återupprepas. När jag väl hade fått
            | till databaskopplingen så tycker jag det gick väldigt enkelt att
            | få till de olika crud-operationerna. Min databas innehåller cyklar
            | med info om märke, växlar och typ av cykel.

        h3 Vilken syn har du på databaser inom konceptet NoSQL?

        p
            | Konceptet är nytt för mig, så min syn på NoSQL känns ganska
            | begränsad. Mitt första intryck är att det känns enkelt
            | att arbeta med, iaf MongoDB. Sen känns NoSQL friare på något sätt.
            | Man kan skapa collections enkelt, och behöver inte definiera upp
            | vad dokumenten ska innehålla för värden. Jag tycker också det
            | verkar intressant med de andra datastrukturerna som finns inom
            | NoSQL, exempelvis graf-databaser. Det skulle jag gärna lära mig
            | om också.

        h3 Reflektera över skillnader och likheter mellan relationsdatabaser och databaser inom NoSQL.

        p
            | Den stora skillnaden som jag ser är att man i NoSQL kan skapa nya
            | nycklar (motsvarande kolumner i SQL) precis som man vill. Man borde
            | alltså kunna låta en användare skicka in vilka key/value-par som helst.
            | I SQL är man bunden till att skriva till de kolumner som man har skapat.
            | Visserligen skulle man i SQL kunna bygga upp den möjligheten också,
            | men då skulle man ta en omväg känns det som.
            | Likheterna är väl grundstrukturen, databas-collection-dokument som
            | kan jämföras med databas-tabell-rad.
            | Sen är det många saker som jag ännu inte har koll på i NoSQL och
            | MongoDB, exempelvis hur användare funkar. Det finns nog en hel del
            | att lära sig.

        h3 Vilka är dina tankar om asynkron programmering med JavaScript?

        p
            | I så här enkla konstruktioner som vi jobbat med i detta kurs-moment
            | så känns det mest bara omständigt. Jag tror fördelarna med
            | asynkron programmering kommer när man kan utföra operationer parallellt.
            | Att då slippa vänta in tidigare händelser verkar vettigt.


        h3 Hur känner du för Docker och det sättet vi jobbar med tjänster i kontainrar?

        p
            | På ett sätt så gillar jag det. Det förenklar ju att köra koden på
            | olika maskiner, och framför allt då när vår kod ska rättas i kurserna.
            | Sen så ser jag även problem med det. Jag tänker främst på nu när
            | jag ska redovisa detta, och vill köra upp min redovisa-sida på
            | internet. Jag tänker att jag då måste ändra en massa för att få till
            | databas-funktionaliteten. Så det känns som att vi mest använder
            | docker för att underlätta rättning, och därmed tappar enkelheten att
            | deploya online.



        br


        h2 Kmom06


        h3 Reflektera över vikten av infrastruktur för moduler för ett programmeringsspråk.

        p
            | Jag antar att frågan syftar på infrastruktur exempelvis npmjs.com.
            | Om vi tänker oss att det inte fanns sådan infrastruktur, så tänker jag
            | att vi skulle få söka efter moduler på ungefär samma sätt som idag.
            | Däremot skulle själva installationen bli mer manuell. Det skulle
            | därefter krångla till det ordentligt när vi använder vår CI-kedja,
            | som förmodligen skulle behöva manuella instruktioner för att kunna
            | hämta de moduler som behövs. Så ur den synpunkten är det viktigt med
            | infrastruktur.

        P
            | Sen tänker jag även på issues-forumet för varje modul, som finns på
            | GitHub. Den är en bra samlingspunkt för problem och lösningar
            | kopplade till modulen. Utan den hade problem och lösningar funnits
            | på mer skilda ställen, än vad det är idag.

        P
            | Min tredje tanke är att man som programmerare inte skulle använda
            | andras kod/moduler lika mycket som man gör idag. Om det skulle vara
            | bättre eller sämre kan man diskutera. Många skulle förmodligen
            | skriva mer kod själva och på så sätt bli bättre, medans andra
            | säkert skulle fastna i problem och inte komma framåt, och därmed
            | inte utvecklas lika fort som dom kanske gör idag.

        h3 Vill du ge dig på att förklara att just npm är den tjänsten som växt snabbast av de modulerkataloger som presenteras på webbplatsen “Module Counts”?

        p
            | Jag tror inte jag har alla svar till varför det är så. Men det är
            | ändå tydligt att populariteten för JavaScript påverkar. Att npm
            | är störst är inte så konstigt då JavaScript är ett av de vanligaste
            | språken. Sen kan man fundera på om npm i sig självt är bättre på
            | något sätt jämfört med liknande tjänster för andra språk. Det skulle
            | vara intressant att undersöka.

        h3 Reflektera över hur arbetet gick att välja, separera, publisera och sedan åter integrera module i din applikation.

        p
            | Jag valde min nim-klass som innehåller grunden till mitt nim-spel.
            | Att det blev den tror jag kanske var ett taktiskt val, då jag trodde
            | det skulle innebära minst problem. Jag hade innan även kikat på npm
            | och hittat liknande moduler, så det kändes ändå inte helt fel. Där
            | hade jag också full täckning gällande tester.

        P
            | Att separera, publicera och åter integrera gick egentligen helt
            | smärtfritt. Visst, lite småsaker var det väl som krånglade, men inget
            | som jag inte kunde lösa relativt snabbt och enkelt.

        h3 Sista uppgiften om att dokumentera och färdigställa redovisa-sidan, tog det mycket tid eller hade du allt klart?

        p
            | Denna uppgiften trodde jag skulle vara enkel, men det visade sig
            | att den tog en massa tid, och krånglade en hel del. Jag kände inte
            | att det bara var att dokumentera, utan fick även trixa en hel del
            | för att uppfylla de kraven som nu ställdes. Till exempel tester,
            | där jag hade gjort tester som under kursens gång flyttats först
            | till appen, och sen till modulen. Det blev att jag skapade några
            | nya tester till redovisa-sidan. Sen fick jag nya fel i min CI-kedja.
            | Lyckades lösa ett i Travis, och fick samtidigt ett nytt i Scrutinizer.
            | Sen fick jag lägga en hel del tid på att testa att mina
            | README-instruktioner verkligen fungerade. Så det blev en del jobb.
            | Fast det var säkert nyttigt det också, så här i efterhand.


        br


        h2 Kmom10


        h3 1. Länka till ditt GitHub repo och ...

        P
            | Mitt github-repo finner du
            | <a href='https://github.com/mafd16/nim'>HÄR!</a>
            | När det kommer till de optionella kraven så aspirerar jag på
            | krav nummer 4. Jag tycker min readme är mycket bra, och framför
            | allt så är den skriven på engelska, vilket nästan är ett krav i
            | dagens internationella värld. Min applikation bygger på det som
            | har gjorts under kursens gång, både när det gäller teknikval och
            | idéer. Jag bestämde mig tidigt för att göra spelet Nim, och har
            | sen hållt fast vid det. Mina tidiga tankar om hur jag skulle göra
            | har också funkat, vilket känns kul! :)

        h3 2. Allmänt stycke

        P
            | Detta projektet har varit både lätt och svårt på samma gång. Låt
            | mig förklara. Att vi under kursens gång har fått beskrivet
            | vad vi ska göra i projektet, utan krav på att göra något direkt,
            | har gjort att man haft gott om tid att fundera och tänka igenom
            | vad och hur man ska göra. Det har varit värt mycket tror jag. För
            | mig innebar det att själva kodandet av spelet gick klart enklare
            | än jag hade väntat mig. Däremot så blev skapandet av tester
            | mycket svårare än väntat. Att testa asynkron kod var svårt i sig,
            | och att starta en server och testa mot den skapade sina svårigheter.
            | Projektet har, uppskattar jag, gått ganska snabbt att göra. Det är
            | dock lite svårt att veta, då vi har haft lång tid på oss under jul
            | och nyår. Överlag så tycker jag att det har varit ett rimligt
            | projekt för kursen.

        h3 3. Mina tankar om kursen

        P
            | Det som jag först kommer att tänka på är att kursen är ganska så
            | spretig. Vi har jobbat med javascript-ramverk, websockets, no-sql
            | databas, docker, npm-modul, enhetstester mm. Så jag har haft lite
            | svårt att se den röda tråden i kursen. Visserligen har projektet
            | varit med under de tidigare kursmomenten, som en ihophållande faktor.
            | Nu har vi även endast haft som krav att köra redovisa-sidan och
            | projektet lokalt. Det skulle vara kul att lägga det online också,
            | men det ställer förstås mycket högre krav på både utbildningen och
            | studenterna.

        P
            | Föreläsningar, artiklar och övrigt material tycker jag har hållt
            | bra kvalitet. Jag är ändå nöjd med kursen, och jag vill tro att
            | den har varit ordentligt utvecklande. För en vän eller kollega
            | som vill lära sig mer javascript kommer jag definitivt att
            | rekommendera kursen. Jag ger kursen betyget 8 av 10.

        br
